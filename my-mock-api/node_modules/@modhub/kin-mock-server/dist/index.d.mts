import { Request, Response } from 'express';

declare const CONFIG: {
    PORT: number;
    mockFilePath: string;
};
type EndpointDefinition = {
    urlPattern: string;
    method?: 'get' | 'post' | 'put' | 'delete' | 'patch';
    debugUrl: string;
    mockFnPath: string;
    disabled?: boolean;
    delay?: number;
};
type MockFn<T, R> = (xReq: Request & T, xRes: Response) => R | Error | Promise<R | Error>;
type RecursiveEndpoints<T = any> = Record<string, T | EndpointDefinition>;
type ApiDef = RecursiveEndpoints<RecursiveEndpoints>;
declare const delay: (ms?: number) => Promise<unknown>;

declare function createMockServer(routes: ApiDef, basePath?: string): {
    start: ({ port, host }: {
        port?: number;
        host?: string;
    }) => void;
};

export { type ApiDef, CONFIG, type EndpointDefinition, type MockFn, createMockServer, delay };
